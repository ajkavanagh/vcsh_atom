{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":23,"width":1280,"height":773,"maximized":true},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{"/Users/alex/Projects/Websand/devops3/development/customer/urbanologie/table_050515_SG.json":"source.json"}},"project":{"paths":["/Users/alex/Projects/Websand/devops3/Development Notes","/Users/alex/Projects/Websand/devops3/development/customer/urbanologie"],"buffers":[{"text":"# Editing the database.\n\nMaking changes to the database is a pain in the ... and isn't repeatable.  This doc is about how to make it eaiser, repeatable, and to work it into a user interface that can make changes (e.g. on import, or during ETL setup).\n\n## Edits via the command line\n\nThe `manage_db_instance` script will take edits, in the form of `json` files that will perform edits to the tables and the metadata in the database; this also increments the metadata forcing instances to reload the metadata.\n\nThe basic outline of an edit file (a JSON object) is:\n\n```json\n{\n    \"metadata\": {\n        \"instance_slug\": \"slug\",\n        \"reference\": \"optional reference - used for edits\",\n        \"description\": \"optional description\"\n    },\n    \"edits\": [\n        ...\n    ]\n}\n```\n\nAt the moment, the only thing interesting is the `instance_slug` which (for the command line tool) will be matched to the slug on the command line (perhaps) and used as a check.\n\n## Possible edits:\n\n - Add table\n - Drop table\n - Add column\n - drop column\n - alter column\n\nFor the moment, altering a column seems very difficult and so we'll probably leave that to another iteration.\n\n### Add table:\n\n```json\n{\n    \"edit\": \"add_table\",\n    \"table_spec\":\n    {\n        \"table_name\": \"listinvite\",\n        \"logical_name\": \"List Invite\",\n        \"table_type\": \"A\",\n        \"key_field_name\": \"id\",\n\n        \"description\": \"List invites\",\n        \"columns\": [\n            [\"Integer\", \"P\", \"id\", \"Invitiation id\", {\"primary_key\": true}],\n            [\"UnicodeText\", \"D\", \"customerstatus\", \"customerstatus\"],\n            [\"Integer\", \"D\", \"listid\", \"List ID\"],\n            [\"UnicodeText\", \"D\", \"name\", \"List Name\"],\n            [\"UnicodeText\", \"D\", \"first_name\", \"First Name\"],\n            [\"Email\", \"D\", \"email\", \"Email\"],\n            [\"DateTime\", \"D\", \"created\", \"Created TS\"],\n            [\"Integer\", \"D\", \"status\", \"Status\"],\n            [\"created_ts\", \"S\", \"created_dat\", \"Created DateTime\"],\n            [\"updated_ts\", \"S\", \"updated_dat\", \"Updated DateTime\"]\n        ]\n    }\n}\n```\n\nNote that this format is identical to the 'bulk' create format (which may eventually be replaced by this format).\n\n### Drop table\n\n```json\n{\n    \"edit\": \"drop_table\",\n    \"table\": \"listinvite\"\n}\n```\n\n### Add column\n\n```json\n{\n    \"edit\": \"add_column\",\n    \"table\": \"listinvite\",\n    \"column\": [\"UnicodeText\", \"D\", \"customerstatus\", \"customerstatus\"]\n}\n```\n\n### Drop column\n\n```json\n{\n    \"edit\": \"drop_column\",\n    \"table\": \"listinvite\",\n    \"column\": \"customerstatus\"\n}\n```\n\n### Alter column\n\n**This only works for adding or removing a foreign key relationship**\n\n```json\n{\n    \"edit\": \"alter_column\",\n    \"table\": \"<tablename>\",\n    \"column\": \"<column_name\",\n    \"add_options\": {\n        \"<key>\": <value>\n    },\n    \"remove_options\": [list of options to remove],\n    \"new_column_attr\": \"<attr\",\n    \"new_logical_name\": \"<name for column>\",\n}\n```\n\n","markers":{"markers":{"1":{"id":1,"range":[[38,0],[42,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":28,"goalScreenRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History","version":1},"encoding":"utf8","filePath":"/Users/alex/Projects/Websand/devops3/Development Notes/database-edits.md","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"33b5c564c7722046fd5522a52ac7d5a10de39333","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":28,"softTabs":true,"displayBuffer":{"id":29,"softWrapped":true,"editorWidthInChars":null,"scrollTop":584,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/alex/Projects/Websand/devops3/Development Notes/database-edits.md","invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/Users/alex/Projects/Websand/devops3/Development Notes/database-edits.md","focused":false,"flexScale":1,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-gfm","language-json","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"find-and-replace":{"viewState":"","modelState":{"useRegex":false,"inCurrentSelection":false,"caseSensitive":false,"wholeWord":false},"projectViewState":"","resultsModelState":{"useRegex":false,"caseSensitive":false},"findHistory":["alter"],"replaceHistory":[],"pathsHistory":[]},"fuzzy-finder":{"/Users/alex/Projects/Websand/devops3/Development Notes/database-edits.md":1430846549736},"keybinding-resolver":{},"metrics":{"sessionLength":12446954},"tree-view":{"directoryExpansionStates":{"/Users/alex/Projects/Websand/devops3/Development Notes":{"isExpanded":true,"entries":{}},"/Users/alex/Projects/Websand/devops3/development/customer/urbanologie":{"isExpanded":true,"entries":{}}},"selectedPath":"/Users/alex/Projects/Websand/devops3/Development Notes/database-edits.md","hasFocus":true,"attached":true,"scrollLeft":0,"scrollTop":0,"width":288}}}